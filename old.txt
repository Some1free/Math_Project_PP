    if (len(data)==1): #line==0
        try:
            total_length = float(data[0])
        except:
            print("Podano źle skonfigurowane dane") # w lini 1. Należy podać wyłącznie całkowitą dłuość belki bez jednostki ani znaków specjalnych")

    if(len(data) == 3 and data[1] and data[2]):
        try:
            if re.match("MOMENT(.*)", data[0]):
                    momentum[m,0] = float(data[1])
                    momentum[m,1] = float(data[2])
                    m+=1
            if re.match("SILA(.*)", data[0]):
                    force[f,0] = float(data[1])
                    force[f,1] = float(data[2])
                    f+=1
        except:
            print("Podano źle skonfigurowane dane momnetów lub sił")

    if(len(data) == 4 and data[1] and data[2] and data[3]):
        try:
            continuous_force[cf,0] = float(data[1])*float(data[2])
            continuous_force[cf,1] = (float(data[3])-float(data[2]))/2
            cf+=1
        except:
            print("Podano źle skonfigurowane dane obciążenia ciągłego")

return force, continuous_force, momentum, f, cf, m, total_length









def total(table_name, x):
    total = 0
    for i in range(x):
        total = total + table_name[i,0]*table_name[i,1]
    return total

def count_rb(force_total, momentum_total,total_length):
    Rb = (force_total+momentum_total)/total_length
    return Rb


def count_ra(force_total, continuous_force_total, Rb):
        Ra = force_total + continuous_force_total - Rb 
        return Ra


def counting_values(force, continuous_force, momentum, f, cf, m, total_length):
    force_total = total(force, f)
    momentum_total = total(momentum, m)
    continuous_force_total = total(continuous_force, cf)

    Rb = count_rb(force_total, momentum_total,total_length)
    Ra = count_ra(force_total, continuous_force_total, Rb)

    return Ra, Rb